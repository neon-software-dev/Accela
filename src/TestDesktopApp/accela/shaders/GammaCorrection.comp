#version 450

//
// Definitions
//
const uint POST_EFFECT_LOCAL_SIZE_X = 16;
const uint POST_EFFECT_LOCAL_SIZE_Y = 16;
const uint POST_EFFECT_LOCAL_SIZE_Z = 1;

//
// Inputs
//
layout(push_constant) uniform constants
{
    uint renderWidth;
    uint renderHeight;
    float gamma;
} PushConstants;

layout (set = 0, binding = 0, rgba32f) uniform image2DArray i_offscreenImage;

layout (local_size_x = POST_EFFECT_LOCAL_SIZE_X,
        local_size_y = POST_EFFECT_LOCAL_SIZE_Y,
        local_size_z = POST_EFFECT_LOCAL_SIZE_Z) in;

void main()
{
    // Ignore out of render size work invocations (for when a render dimension isn't cleanly divisible by
    // the local group size).
    if (gl_GlobalInvocationID.x > PushConstants.renderWidth || gl_GlobalInvocationID.y > PushConstants.renderHeight)
    {
        return;
    }

    //
    // Load input
    //
    vec4 inPixel = imageLoad(i_offscreenImage, ivec3(gl_GlobalInvocationID.xy, 0));

    //
    // Process
    //

    // gamma correction
    const vec3 mapped = pow(inPixel.xyz, vec3(1.0f / PushConstants.gamma));

    const vec4 outPixel = vec4(mapped, inPixel.a);

    //
    // Store output
    //
    imageStore(i_offscreenImage, ivec3(gl_GlobalInvocationID.xy, 0), outPixel);
}
